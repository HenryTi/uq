-- [AccCustomer(create, write, read, list)]
-- [AccOrder]
SHEET Order ver 0.6 (
    customer ID Customer not null,
    ARR products (
        product ID Product not null,
        pack OF product.Pack not null,
        price dec(12,2) not null,
        quantity int not null,
        amount dec(12,2) not null,
    )
)
/*
Verify {
    if customer<=0 Fail;
    foreach products {
        if product<=0 Fail;
    }
}
*/
Verify 
    RETURNS a1 (t int, k char(50))
    RETURNS a2 (t int, k char(50))
{
    if customer<=0 into a1 select 1 as t, 2 as k;
    foreach products {
        if product<=0 into a2 select 3 as t, 4 as k;
    }
}
ACTION {
    foreach products {
        var a ID;
        set a = product;
        set a = 1;
    }
}
Action submit {
    var recId ID, bbb int;
    set bbb = 3 + 5;
    STATE TO deliver;
    PENDING Receivable +(customer:1, product:2, pack:2, price:3.5*bbb) to recId;
    PENDING Receivable -at recId;
    PENDING Receivable -(price:2.5+amount) at recId del if 3*2=amount;
    PENDING Receivable +(customer:1, product:2, pack:2, price:3.77*bbb) to recId;

    bus bus1.complex1 set a1=1, c3=2, bbba37='a37';
    bus bus1.complex1 into arrName add a1=3, a2=2, a3=now();
    bus bus1.complex1 send; -- user=1 unit=3;
}
STATE deliver {
    ACTION finish {
        table t(a int);
        into t select 1 as a;
        STATE TO END;
    }
}
;

HISTORY hist (
    date,
    key k1 ID Product,
    e1 int,
);

SHEET Order1 ver 0.6 (
    customer ID Customer not null,
)
action {
    state to end;
}
ACTION submit {
    STATE TO END;
}
action a1 {
    state to end;
};


